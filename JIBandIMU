package it.rcpvision.dl4j.workbench;

import java.io.*;
import org.json.simple.parser.ParseException;
import org.nd4j.linalg.api.ndarray.INDArray;
import org.nd4j.linalg.factory.Nd4j;

@SuppressWarnings("deprecation")
public class JIBandIterator
{	
	public void printJIBandIMUData() throws IOException, ParseException
	{
		JuxtopiaDataConfig j = new JuxtopiaDataConfig();							
		String strValue1 = j.getJIBandDataConfig("TestCorrect");	
/*		String strValue2 = j.getJIBandDataConfig("TestIncorrect");
		String strValue3 = j.getJIBandDataConfig("TrainCorrect");	
		String strValue4 = j.getJIBandDataConfig("TrainIncorrect");		
*/		
		File tstcFolder = new File(strValue1);
		File[] tstcFolderList = tstcFolder.listFiles(); //file array listing out the contents of the folder for test correct data
		String line = null; // declaring and instantiating the string object line which is set equal to null for now
		String strTemp = null;
		Double dblLine =  null;
		double[][]dblArray = new double [1][3];
		BufferedReader br = null; // declaring and instantiating the buffered reader object br which is set equal to null for now
		
	for (File tstcFile : tstcFolderList) //for loop stating that for each file in the test correct folder:
		{ 
				try 
				{
					br = new BufferedReader(new FileReader(tstcFile)); // assigning the buffered reader br the value of a new file reader wrapped in a new buffered reader 
					
					while ((line = br.readLine()) != null) 
					{
					strTemp = line.strip();
				
					
					int	intFirstSpacePos = strTemp.indexOf(" ");
					int intLastSpacePos = strTemp.lastIndexOf(" ");
					int intLastStringPos = strTemp.length();
				
					
					strTemp = line.strip().substring(0, intFirstSpacePos);
					dblLine = Double.parseDouble(strTemp);
					dblArray[0][0] = dblLine;
					
					if (intFirstSpacePos == intLastSpacePos) 
					{
						strTemp = line.strip().substring(intLastSpacePos, intLastStringPos);
						dblLine = Double.parseDouble(strTemp);
						dblArray[0][1] = dblLine;
						dblArray[0][2] = 0;
					} 
					else 
					{	
					strTemp = line.strip().substring(intFirstSpacePos, intLastSpacePos);
					dblLine = Double.parseDouble(strTemp);
					dblArray[0][1] = dblLine;
					
					strTemp = line.strip().substring(intLastSpacePos, intLastStringPos);
					dblLine = Double.parseDouble(strTemp);
					dblArray[0][2] = dblLine;
					}
					
					INDArray input = Nd4j.create(new double[][][] {dblArray});
					System.out.println(input);
				
					}
					br.close();		
					
				} // end try block 
				catch (IOException i) 
				{
					i.printStackTrace();
				} 
				catch(NullPointerException ex) 
				{
					
				} 
				catch(NumberFormatException t) 
				{
					
				} 
				catch(StringIndexOutOfBoundsException s) 
				{
					System.out.println("Error occurred at...");
				}	
		}
	
	}	
	
	public static void main(String[] args) throws IOException, ParseException 
	{
		JIBandIterator i = new JIBandIterator();
		i.printJIBandIMUData();
	}
}
