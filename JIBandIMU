package com.juxtopia.jiband;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import org.json.simple.parser.ParseException;
import com.juxtopia.common.JuxtopiaDataConfig;

@SuppressWarnings("deprecation")
public class JuxtopiaIMUDataPrint 

{
	public String printJIBandIMUData() throws IOException, ParseException
	{
		JuxtopiaDataConfig j = new JuxtopiaDataConfig();							
		String strValue1 = j.getJIBandDataConfig("TestCorrect");	
/*		String strValue2 = j.getJIBandDataConfig("TestIncorrect");
		String strValue3 = j.getJIBandDataConfig("TrainCorrect");	
		String strValue4 = j.getJIBandDataConfig("TrainIncorrect");		
*/		
		File tstcFolder = new File(strValue1); // file object instantiated as the folder containing the test correct data
		File[] tstcFolderList = tstcFolder.listFiles(); //file array listing out the contents of the folder for test correct data
		String line = null; // declaring and instantiating the string object line which is set equal to null for now
		BufferedReader br = null; // declaring and instantiating the buffered reader object br which is set equal to null for now
		
	for (File tstcFile : tstcFolderList) //for loop stating that for each file in the test correct folder:
		
		{ 
		//	System.out.println(tstcFile.getName()); // print the name of each file in the directory
				try 
				{
					br = new BufferedReader(new FileReader(tstcFile)); // assigning the buffered reader br the value of a new file reader wrapped in a new buffered reader 
			
		
					while ((line = br.readLine()) != null) // while loop stating that when a file is pulled from the directory and the content of the file is not equal to null the program should read that line until there are no lines left in the file
					{
					
					System.out.println(line); // print the lines read from the file
						line = br.readLine();

					} // end while block	
					br.close(); //closes the buffered reader stream
				} // end try block 
				catch (IOException i) 
				{
					i.printStackTrace();
				} // end catch block	
		}
	return strValue1;
	}
	public static void main(String[] args) throws IOException, ParseException {
		
		JuxtopiaIMUDataPrint i = new JuxtopiaIMUDataPrint();
		String strData = i.printJIBandIMUData();
		System.out.println(strData);
		
 }
